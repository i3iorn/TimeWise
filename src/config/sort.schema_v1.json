{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/i3iorn/TimeWise/blob/main/sort.schema_v1.json",
  "title": "SortingMethod",
  "description": "A sorting method for tasks.",
  "type": "object",
  "properties": {
    "name": {
      "description": "The name of the sorting method.",
      "type": "string"
    },
    "attributes": {
      "description": "The attributes of the sorting method.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/sorting_attribute"
      },
      "uniqueItems": true,
      "uniqueItemProperties": ["name"]
    }
  },
  "required": [
    "name",
    "attributes"
  ],

  "$defs": {
    "value_type": {
      "oneOf": [
        {
          "type": "string",
          "if": {
            "properties": {
              "input_type": {
                "const": "string"
              }
            }
          }
        },
        {
          "type": "integer",
          "if": {
            "properties": {
              "input_type": {
                "const": "integer"
              }
            }
          }
        },
        {
          "type": "number",
          "if": {
            "properties": {
              "input_type": {
                "const": "float"
              }
            }
          }
        },
        {
          "type": "string",
          "format": "date-time",
          "if": {
            "properties": {
              "input_type": {
                "const": "date-time"
              }
            }
          },
          "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[+-]\\d{2}:\\d{2})$",
          "examples": ["2021-01-01T00:00:00Z"],
          "errorMessage": {
              "pattern": "The value must be a valid date-time string."
          },
          "minimum": "2000-01-01T00:00:00Z",
          "maximum": "2100-12-31T23:59:59Z"
        }
      ]
    },

    "sorting_attribute": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the attribute to evaluate.",
          "type": "string"
        },
        "input_type": {
          "description": "The type of input to expect.",
          "type": "string",
          "enum": [
            "string",
            "int",
            "float",
            "date-time"
          ]
        },
        "target": {
          "description": "The value to compare the attribute to.",
          "$ref": "#/$defs/value_type"
        },
        "default": {
          "description": "The default value to use if the attribute is not present.",
          "$ref": "#/$defs/value_type"
        },
        "operator": {
          "description": "The type of comparison to perform.",
          "type": "string",
          "enum": [
            "equal",
            "not-equal",
            "greater-than",
            "greater-than-or-equal",
            "less-than",
            "less-than-or-equal"
          ],
          "default": "equal"
        },
        "nullable": {
          "description": "Whether the attribute can have a null value.",
          "type": "boolean",
          "default": false
        },
        "reverse": {
          "description": "Whether to reverse the sorting order.",
          "type": "boolean",
          "default": false
        },
        "required": {
          "description": "Whether the attribute is required.",
          "type": "boolean",
          "default": true
        },
        "stable": {
          "description": "Whether the attribute is stable.",
          "type": "boolean",
          "default": false
        },
        "weight": {
          "description": "The weight of the attribute in the sorting method.",
          "type": "number",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": [
        "name",
        "input_type",
        "target"
      ],
      "if": {
        "properties": {
          "required": {
            "const": false
          }
        }
      },
      "then": {
        "required": ["default"]
      }
    }
  }
}